/*! HTML5 Boilerplate v8.0.0 | MIT License | https://html5boilerplate.com/ */

/* main.css 2.1.0 | MIT License | https://github.com/h5bp/main.css#readme */
/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

html {
  color: #222;
  font-size: 1em;
  line-height: 1.4;
	font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
}

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * Vendor-prefixed and regular ::selection selectors cannot be combined:
 * https://stackoverflow.com/a/16982510/7133471
 *
 * Customize the background color to match your design.
 */

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none;
}

::selection {
  background: #b3d4fc;
  text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
  resize: vertical;
}

/* ==========================================================================
   Author's custom styles
   ========================================================================== */

.d-flex {
  display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	width: 100%;
}

.flex-50 {
  flex: 0 0 50%;
	width: 50%;
}

.flex-33 {
  flex: 0 0 33.333333%;
	width: 33.333333%;
}

.flex-100 {
  flex: 0 0 100%;
	width: 100%;
}

.intro {
  text-align: center;
}

.dice {
  text-align: center;
	padding: 2rem;
	transition: box-shadow 75ms ease-out;
	box-shadow: inset 0 0 0 1px rgba(0,0,0,0.1);
}

.dice:active {
	box-shadow: inset 5px 5px 8px 0 rgba(0,0,0,0.2);
	background-color: rgba(0,0,0,0.03);
}

.dice-number {
  display: block;
	font-weight: bold;
	font-size: 2rem;
} 

.dice-description {
  text-transform: uppercase;
	font-size: 0.75rem;
	color: gray;
	line-height: 1;
}

.dice-display {
  position: fixed;
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: column;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background-color: rgba(0,0,0,.8);
	z-index: 1;
	overflow-y: auto;
}

.dice-result {
  background: #ffffff;
	border: 2px solid #000000;
	width: 60px;
	height: 60px;
	display: flex;
	justify-content: center;
	align-items: center;
	margin: 1rem;
	font-weight: bold;
	font-size: 2rem;
	border-radius: 10px;
}

.dice-result[data-value="1"] {
	color: #d9143e;
	animation: shake 200ms 2 linear;
}

.dice-wrapper[data-value="1"]:nth-of-type(2n+1) .dice-result { animation-delay: 50ms; }
.dice-wrapper[data-value="1"]:nth-of-type(3n+1) .dice-result { animation-delay: 100ms; }

.dice-result[data-value="6"] {
	color: #ffffff;
	background-color: #11bbd9;
	animation: glowing 5000ms infinite;
}

.dice-wrapper[data-value="6"]:nth-of-type(2n+1) .dice-result { animation-delay: 200ms; }
.dice-wrapper[data-value="6"]:nth-of-type(3n+1) .dice-result { animation-delay: 400ms; }

@keyframes glowing {
  0% { box-shadow: 0 0 -10px #f2ee6d; transform: translate(0,0px); }
  33.33% { box-shadow: 0 0 20px #f2ee6d; transform: translate(0, 2px); }
  66.66% { box-shadow: 0 0 20px #f2ee6d; transform: translate(0, -2px); }
  100% { box-shadow: 0 0 -10px #f2ee6d; transform: translate (0, 0); }
}

@keyframes shake {
  0% { transform: translate(3px, 0); }
  50% { transform: translate(-3px, 0); }
  100% { transform: translate(0, 0); }
}

.dice-max {
  text-align: center;
	margin: 0.5rem 0;
	color: #ffffff;
	font-size: 1.25rem;
	vertical-align: middle;
}

.dice-max span {
  font-weight: bold;
	font-size: 2rem;
}

.dice-max-total {
  margin-top: 0;
}

.dice-input {
  font-size: 2rem;
	width: 150px;
	padding: 1rem;
	text-align: center;
}

.dice-trigger {
  display: block;
	border: 1px solid #000000;
	background-color: rgba(200,200,200,1);
	padding: 1rem;
	width: 150px;
	border-bottom-left-radius: 10px;
	border-bottom-right-radius: 10px;
}

.flex-center {
	display: flex;
  justify-content: center;
	align-items: center;
}

.flex-column {
  flex-direction: column;
}

.log-wrapper {
  position:fixed;
	bottom: 0;
	left: 0;
	right: 0;
	border-top: 1px solid gray;
	background-color: rgba(0,0,0,0.1);
	overflow-y: scroll;
	height: 5rem;
}

.log-inner-wrapper {
	padding: 0.5rem;
}

.log-entry {
	margin: 0;
}

/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden,
[hidden] {
  display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

.sr-only {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  /* 1 */
}

/*
 * Extends the .sr-only class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.sr-only.focusable:active,
.sr-only.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: inherit;
  width: auto;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
  visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix::before,
.clearfix::after {
  content: " ";
  display: table;
}

.clearfix::after {
  clear: both;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {
  /* Style adjustments for viewports that meet the condition */
}

@media print,
  (-webkit-min-device-pixel-ratio: 1.25),
  (min-resolution: 1.25dppx),
  (min-resolution: 120dpi) {
  /* Style adjustments for high resolution devices */
}

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   https://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */

@media print {
  *,
  *::before,
  *::after {
    background: #fff !important;
    color: #000 !important;
    /* Black prints faster */
    box-shadow: none !important;
    text-shadow: none !important;
  }

  a,
  a:visited {
    text-decoration: underline;
  }

  a[href]::after {
    content: " (" attr(href) ")";
  }

  abbr[title]::after {
    content: " (" attr(title) ")";
  }

  /*
   * Don't show links that are fragment identifiers,
   * or use the `javascript:` pseudo protocol
   */
  a[href^="#"]::after,
  a[href^="javascript:"]::after {
    content: "";
  }

  pre {
    white-space: pre-wrap !important;
  }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }

  /*
   * Printing Tables:
   * https://web.archive.org/web/20180815150934/http://css-discuss.incutio.com/wiki/Printing_Tables
   */
  thead {
    display: table-header-group;
  }

  tr,
  img {
    page-break-inside: avoid;
  }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }

  h2,
  h3 {
    page-break-after: avoid;
  }
}

